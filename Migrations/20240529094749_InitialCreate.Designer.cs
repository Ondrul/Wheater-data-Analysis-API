// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

#nullable disable

namespace Wheater_data_Analysis_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240529094749_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Wheater_data_Analysis_API.Models.WeatherData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("DataPrecipitation")
                        .HasColumnType("REAL");

                    b.Property<int>("DataTemperatureAvgTemp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DataTemperatureMaxTemp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DataTemperatureMinTemp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DataWindDirection")
                        .HasColumnType("INTEGER");

                    b.Property<float>("DataWindSpeed")
                        .HasColumnType("REAL");

                    b.Property<string>("DateFull")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DateMonth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DateWeekOf")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DateYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StationCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StationCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StationLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StationState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WeatherData");
                });
#pragma warning restore 612, 618
        }
    }
}
